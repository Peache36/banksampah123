// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}


model DataUser {
  id Int @id @default(autoincrement())
  firebaseId String @unique
  name String
  role Role @default(user)
  profile Profile?
  deposit Deposit[]
  posts Post[] 
  comments Comment[]
}

enum Role {
  user
  admin
}

model Post {
  id Int @id @default(autoincrement())
  title String
  content String
  photo String
  user DataUser @relation(fields: [userId],references: [id], onDelete: Cascade)
  userId Int
  like Int @default(0)
  createAt DateTime @default(now())
  updateAt DateTime @default(now())
  comments Comment[]
}

model Comment {
  id Int @id @default(autoincrement())
  content String
  post Post @relation(fields: [postId],references: [id], onDelete: Cascade)
  postId Int
  createAt DateTime @default(now())
  updateAt DateTime @default(now())
  user DataUser @relation(fields: [userId],references: [id],onDelete: Cascade)
  userId Int
}

model Profile {
  id Int @id @default(autoincrement())
  user DataUser @relation(fields: [userId],references: [id])
  userId Int @unique
  address String
  phoneNumber String
  point Int
  socketId String?
  photo String
}

model Rubbish {
  id Int @id @default(autoincrement())
  price Int
  unit String
  name String
  deposit RubbishOnDeposit[]
  createAt DateTime @default(now())
  updateAt DateTime @default(now())
}

model Deposit {
  id Int @id @default(autoincrement())
  user DataUser @relation(fields: [userId],references: [id])
  userId Int
  rubbish RubbishOnDeposit[] 
}

model RubbishOnDeposit {
  deposit Deposit @relation(fields: [depositId], references: [id])
  depositId Int
  rubbish Rubbish @relation(fields: [rubbishId],references: [id])
  rubbishId Int
  @@id([depositId,rubbishId])

}

model Transaction {
  id String @id
  total_price Int
  requestAt DateTime @default(now())
  // add user
}